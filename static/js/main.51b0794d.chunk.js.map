{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onShowModal","selectedId","className","map","todo","id","title","completed","isSelected","classNames","type","onClick","handleShow","TodoFilter","statusSelect","onFilterStatus","searchResult","onSearchChange","onClearSearch","value","onChange","event","currentTarget","handleAddFilter","placeholder","handleSearchChange","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","onCloseModal","userId","useState","user","setUser","useEffect","getUser","userFromServer","href","email","name","App","setTodos","setSelectedTodo","setStatusSelect","setSearchResult","todosFromServer","prepareTodos","filter","query","toLowerCase","includes","trim","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51b0794d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedId: number | undefined,\n  onShowModal: (selectedTodo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onShowModal,\n  selectedId,\n}) => {\n  const handleShow = (todo: Todo) => {\n    onShowModal(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          const isSelected = selectedId === id;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': isSelected },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleShow(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': !isSelected },\n                      { 'fa-eye-slash': isSelected },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  statusSelect: string,\n  onFilterStatus: (value: string) => void,\n  searchResult: string,\n  onSearchChange: (value: string) => void,\n  onClearSearch: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  statusSelect,\n  onFilterStatus,\n  searchResult,\n  onSearchChange,\n  onClearSearch,\n}) => {\n  const handleAddFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    onFilterStatus(event.currentTarget.value);\n  };\n\n  const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={statusSelect}\n            data-cy=\"statusSelect\"\n            onChange={event => handleAddFilter(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchResult}\n          onChange={event => handleSearchChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchResult.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onCloseModal }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport function filterTodos(todos: Todo[], query: string): Todo[] {\n  return todos.filter(todo => {\n    return todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase().trim());\n  });\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [statusSelect, setStatusSelect] = useState('all');\n  const [searchResult, setSearchResult] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const onShowModal = (todo: Todo) => setSelectedTodo(todo);\n  const onCloseModal = () => setSelectedTodo(null);\n  const onFilterStatus = (value: string) => setStatusSelect(value);\n  const onSearchChange = (query: string) => setSearchResult(query);\n  const onClearSearch = () => setSearchResult('');\n\n  let prepareTodos = [...todos];\n\n  switch (statusSelect) {\n    case 'all':\n      prepareTodos = [...todos];\n      break;\n    case 'completed':\n      prepareTodos = todos.filter(todo => todo.completed);\n      break;\n    case 'active':\n      prepareTodos = todos.filter(todo => !todo.completed);\n      break;\n    default:\n      prepareTodos = [...todos];\n      break;\n  }\n\n  if (searchResult.length) {\n    prepareTodos = filterTodos(prepareTodos, searchResult);\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                statusSelect={statusSelect}\n                onFilterStatus={onFilterStatus}\n                searchResult={searchResult}\n                onSearchChange={onSearchChange}\n                onClearSearch={onClearSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={prepareTodos}\n                  onShowModal={onShowModal}\n                  selectedId={selectedTodo?.id}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onCloseModal={onCloseModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}